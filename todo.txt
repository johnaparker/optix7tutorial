check radius init



triangle tutorial: write it without a camera first
first tutorials: use 3 units (u0, u1, u2) to capture float3 at intersection; use pointer pack/unpack when more reporting is needed (see sphere_other cu file)

rewrite glfWindow -> Window based on vdynamics that uses Modern openGL and framebuffers
two camera options: fps and rts

Replace SBT Records in scene.cpp with:
            template <typename T>
            struct SbtRecord
            {
                __align__( OPTIX_SBT_RECORD_ALIGNMENT ) char header[OPTIX_SBT_RECORD_HEADER_SIZE];
                T data;
            };

            typedef SbtRecord<RayGenData>     RayGenSbtRecord;
            typedef SbtRecord<MissData>       MissSbtRecord;
            typedef SbtRecord<HitGroupData>   HitGroupSbtRecord;

Anyhit program set to nullptr in HitGroupProgram instead of defining dummy
Remove vector of programs when we only need one; add more (consider using map instead of vector) when more program types are required
Compare pipeline, etc. code to SDK
